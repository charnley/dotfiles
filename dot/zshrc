#!/usr/bin/env zsh

#zmodload zsh/zprof

# Disable auto-update prompt
DISABLE_AUTO_UPDATE=true

# TODO https://www.youtube.com/watch?v=eLEo4OQ-cuQ
# TODO https://gist.github.com/LukeSmithxyz/e62f26e55ea8b0ed41a65912fbebbe52

# export fpath=($HOME/opt/zsh/share/zsh/5.8/functions "${fpath[@]}" )

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"


# colors

Black="\[\033[0;30m\]"        # Black
Red="\[\033[0;31m\]"          # Red
Green="\[\033[0;32m\]"        # Green
Yellow="\[\033[0;33m\]"       # Yellow
Blue="\[\033[0;34m\]"         # Blue
Purple="\[\033[0;35m\]"       # Purple
Cyan="\[\033[0;36m\]"         # Cyan
White="\[\033[0;37m\]"        # White

# https://github.com/subnixr/minimal/blob/master/minimal.zsh
MNML_OK_COLOR="2"
MNML_ERR_COLOR="1"

function __git_prompt_git () {
    GIT_OPTIONAL_LOCKS=0 command timeout 1s git "$@"
}

function git_fast_status() {
    local color="%{\e[0;32m%}"
    local bname="$(git rev-parse --abbrev-ref HEAD 2> /dev/null)"

    if test -n "$bname"; then
        git diff-index --quiet HEAD --
        if test ! $? -eq 0; then
            color="%{\e[0;31m%}"
        fi
    fi

    printf '%b' "$color$bname%{\e[0m%}"
}

function mnml_git {
    local statc="%{\e[0;32m%}" # assume clean
    local bname="$(git rev-parse --abbrev-ref HEAD 2> /dev/null)"

    if [ -n "$bname" ]; then
        if [ -n "$(git status --porcelain 2> /dev/null)" ]; then
            statc="%{\e[0;31m%}"
        fi
        printf '%b' "$statc$bname%{\e[0m%}"
    fi
}

function conda_env {
    if test -n "$CONDA_PREFIX"
    then
        local basename=$(basename $CONDA_PREFIX)
        CONDA_ENV="($basename)"
    else
        CONDA_ENV=""
    fi
    print "%b" "$CONDA_ENV"
}

# %m hostname
# %n usernamne
# %1~ dirname

# TODO Add hostname to LPROMPT if not laptop
# TODO Add username to LPROMPT if not me

PROMPT='→ '
# RPROMPT='%1~ $(mnml_git)'
# RPROMPT='$(conda_env) $(mnml_git) %(4~|.../%3~|%~)'
RPROMPT='$(conda_env) $(git_fast_status) %(4~|.../%3~|%~)'

# Is this a mac?
if [[ "`uname`" == "Darwin" ]]
then
    is_mac="1"
else
    is_mac="0"
fi

# If non-default hostname
valid_hostnames=(laptop baerbar)
if [[ "$is_mac" == "1" || "`hostname`" == "baerbar" ]];
then
    PROMPT='→ '
else
    needle=`hostname`
    echo $needle
    if [[ ${valid_hostnames[(ie)$needle]} -le ${#valid_hostnames} ]]
    then
        PROMPT='> '
    else
        # PROMPT='%F{blue}%m > '
        PROMPT='%m > '
    fi
fi

# If non-default username


# Remove rprompt on enter
setopt TRANSIENT_RPROMPT

# enable vim key
bindkey -v
export KEYTIMEOUT=1

export VI_MODE_SET_CURSOR=true


# Edit line in vim with ctrl-e:
autoload edit-command-line; zle -N edit-command-line
bindkey '^e' edit-command-line

# Plugins
plugins=(
    # git
    zsh-syntax-highlighting
)

# zsh-autosuggestions
test -d $ZSH && source $ZSH/oh-my-zsh.sh

# History
setopt HIST_IGNORE_SPACE
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_SAVE_NO_DUPS
HISTORY_IGNORE="b:e:cd:gs:gd:l:ls:"
ZSH_AUTOSUGGEST_HISTORY_IGNORE="cd *"
ZSH_AUTOSUGGEST_COMPLETION_IGNORE="git *"

# I don't like underline
ZSH_HIGHLIGHT_STYLES[path]=none
ZSH_HIGHLIGHT_STYLES[path_prefix]=none

# all my aliases
source ${HOME}/.bash_aliases

# all my paths
source ${HOME}/.bash_paths

if test -f ~/.bash_aliases; then . ~/.bash_aliases; fi

if test -d "$HOME/.local/bin"; then PATH="$HOME/.local/bin:$PATH"; fi
if test -d "/opt/bin"; then PATH="/opt/bin:$PATH"; fi
if test -d "/opt/sbin"; then PATH="/opt/sbin:$PATH"; fi
if test -d "/snap/bin"; then PATH="/snap/bin:$PATH"; fi
if test -d "$HOME/bin"; then PATH="$HOME/bin:$PATH"; fi

# export PATH="$HOME/opt/anaconda3/bin:$PATH"  # commented out by conda initialize
export PATH="$HOME/opt/brew/bin:$PATH"

# fuzzy search
test -f ~/.fzf.zsh && source ~/.fzf.zsh

if type ag &> /dev/null; then
    export FZF_DEFAULT_COMMAND='ag -p ~/.gitignore -g "" "${FZF_BASE:-.}"'
    export FZF_CTRL_T_COMMAND='ag -p ~/.gitignore -g "" "${FZF_BASE:-.}"'
fi

# home and end
bindkey "^[[1~" beginning-of-line
bindkey "^[[4~" end-of-line

export LC_ALL=en_US.UTF-8

unsetopt CDABLE_VARS

# CONDA Pyhon packages
CONDA_DIR="$HOME/opt/anaconda3"
test ! -d $CONDA_DIR && CONDA_DIR="$HOME/opt/miniconda3/"
test -d $CONDA_DIR && source $CONDA_DIR/etc/profile.d/conda.sh

# Node Version Manager
export NVM_DIR="$HOME/opt/nvm"
test -s "$NVM_DIR/nvm.sh" && source "$NVM_DIR/nvm.sh"  --no-use  # This loads nvm
# test -s "$NVM_DIR/bash_completion" && source "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

test -f $HOME/.zshrc.local && source $HOME/.zshrc.local

# Profile
#zprof

export MAMBA_EXE='$HOME/.local/bin/micromamba';
export MAMBA_ROOT_PREFIX='$HOME/micromamba';
__mamba_setup="$("$MAMBA_EXE" shell hook --shell zsh --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__mamba_setup"
else
    alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
fi
unset __mamba_setup
