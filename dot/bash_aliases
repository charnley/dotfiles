#!/bin/bash

# Set standard editor
export EDITOR=vim

# Easy access
alias dotfiles='cd $HOME/git/dotfiles'

# Git Shortcuts
alias gco='git commit'
alias gca='git commit -a'
alias gad='git add .'
alias gamend='git commit --amend'

alias gd='git diff --color-words'
alias gdc='git diff --cached'
alias gg='git lg'

alias gs='git status -s'
alias gph='git push'
alias gpl='git pull --rebase'

alias ggl='fzf_log'

# Annoying mac uses different ls
if [[ $(uname -s) == Linux ]]
then
    alias ls='ls --color'
else
    alias ls='ls -G'
fi
alias l='ls -lh'


# conda
function cona_func {
    if test -d ./env
    then
        conda activate ./env
    else
        conda activate "$@"
    fi
}
# alias cona='conda activate'
alias cona='cona_func'
alias cond='conda deactivate'

# git
function gitclone {

    url=$1
    out=$2

    if [[ $url != *"@"* && $url != *"http"* ]]
    then
        git clone git@github.com:$url $out
    else
        git clone $1 $out
    fi

}


fzf_log() {
    hash=$(git log --color=never --format="%h%d %an %ae %s %cr" "$@" | fzf -m | awk '{print $1}' | xargs)
    echo -n $hash | yank
    git show $(echo $hash | xargs)
}

# https://junegunn.kr/2016/07/fzf-git
# https://gist.github.com/junegunn/8b572b8d4b5eddd8b85e5f4d40f17236

# Will return non-zero status if the current directory is not managed by git
is_in_git_repo() {
    git rev-parse HEAD > /dev/null 2>&1
}


fzf-down() {
    fzf --height 50% "$@" --border
}

gh() {
    is_in_git_repo || return
    git log --date=short --format="%C(green)%C(bold)%cd %C(auto)%h%d %s (%an)" --graph --color=always |
    fzf --ansi --no-sort --reverse --multi --bind 'ctrl-s:toggle-sort' \
    --header 'Press CTRL-S to toggle sort' \
    --preview 'grep -o "[a-f0-9]\{7,\}" <<< {} | xargs git show --color=always | head -'$LINES |
    grep -o "[a-f0-9]\{7,\}"
}

alias gc='gitclone' # from bin

function git_use_private {
    git config user.name "Jimmy Charnley Kromann"
    git config user.email "jimmy@charnley.dk"
}

function git_use_novartis {
    git config user.name "Jimmy Charnley Kromann"
    git config user.email "jimmy.kromann@novartis.com"
}


# tmux
# TODO When starting a new session use tmg as default
alias tm='tmux'
alias tma='tmux_attach'
alias tml='tmux ls'
alias tmk='tmux kill-session -t $1'
alias tmg='tmux new -s $(basename $(pwd))'

function tmux_attach()
{
    # Fuzzy find session if no session is given
    if test ! -z "$1"
    then
        tmux attach -dt $1
    else
        tmux attach -dt `tmux ls | fzf | cut -f1 -d":"`
    fi
}

# tmux clean. Kill all integer tmux sessions
alias tmclean='tmux ls -F "#{session_name}" | while read -r line; do if [[ $line =~ ^-?[0-9]+$  ]]; then tmux kill-session -t $line; fi; done'

# Clear scrollback buffer if in tmux
if [[ $TMUX ]]; then
    alias clear='clear && tmux clear-history'
fi

# TODO Set cd alias to git root if deep in repo

alias cd.='cd ..'
alias cd..='cd ..'
alias cd...='cd ../..'
alias b='cd ..'

function fast_edit()
{
    # Quickly go to folder and find the files you want to edit
    if command -v bat &> /dev/null
    then
        preview="bat --color always {}"
    else
        preview="cat {}"
    fi

    git branch &>/dev/null
    if test $? -eq 0
    then
        $EDITOR `git ls-files | fzf -m --preview="$preview"` $@
    else
        $EDITOR `fzf -m --preview="$preview"` $@
    fi
}

alias e='fast_edit'
alias vi='vim'

# easy rsync
alias rs='rsync -azvh --progress'

# download a song easy
alias youtube-audio='youtube-dl --extract-audio --audio-format best'

# spotify
# alias spotplay="dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause"
# alias spotnext="dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next"
# alias spotprev="dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous"
# alias spotstop="dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Stop"

# Prompt settings
_conda_info() {
    if test -n "$CONDA_PREFIX"
    then
        basename=$(basename $CONDA_PREFIX)
        CONDA_ENV="($basename) "
    else
        CONDA_ENV=""
    fi
    echo -n "$CONDA_ENV"
}

precmd_conda_info() {
    if [[ -n $CONDA_PREFIX ]]; then
      if [[ $(basename $CONDA_PREFIX) == "miniconda3" ]]; then
        # Without this, it would display conda version
        CONDA_ENV="(base) "
      else
        # For all environments that aren't (base)
        CONDA_ENV="($(basename $CONDA_PREFIX)) "
      fi
    # When no conda environment is active, don't show anything
    else
    CONDA_ENV=""
    fi
}


# https://twitter.com/ctrlshifti/status/1160812366293901314
alias please="sudo"

# make directory and change directory
function take {
  mkdir -p $1
  cd $1
}

# Can't remmeber all the different extraction commands
extract () {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xvjf $1 ;;
            *.tar.gz)    tar xvzf $1 ;;
            *.bz2)       bunzip2 $1 ;;
            *.rar)       unrar x $1 ;;
#            *.gz)        gunzip $1 ;;
            *.gz)        tar xvf $1 ;;
            *.tar)       tar xvf $1 ;;
            *.tbz2)      tar xvjf $1 ;;
            *.tgz)       tar xvzf $1 ;;
            *.zst)       tar -I zstd xvzf $1 ;;
            *.zip)       unzip $1 ;;
            *.Z)         uncompress $1 ;;
            *.7z)        7z x $1 ;;
            *.tar.*)     tar xvf $1 ;;
            *)           echo "don't know how to extract '$1'..." ;;
        esac
    else
        echo "'$1' is not a valid file!"
    fi
}

work()
{
    # Activate node and activate python env
    nvm use node
    test -d ./env && cona
}

dework(){
    nvm deactivate
    conda deactivate
}

# Get code snippets
cheat()
{
    where="$1"; shift
    IFS=+ curl "https://cht.sh/$where/ $*"
}

# Get outward facing ip
alias myip='echo $(curl -s https://api.ipify.org)'

# fun
alias emoji_shrug='echo -n "¯\_(ツ)_/¯" | yank'
alias emoji_run='echo -n "ᕕ( ᐛ )ᕗ" | yank'

# if local
test -f $HOME/.bash_aliases.local && source $HOME/.bash_aliases.local

# slurm specific commands
if test -x "$(command -v sinfo)"; then
    alias s_idle='sinfo | grep idle'
    alias s_busy='sinfo | grep alloc; sinfo | grep mix'

    alias q='squeue -u $USER'
    alias ql='squeue | grep $USER | wc -l'

    # http://slurm.schedmd.com/squeue.html
    alias qs='squeue -o "%.10i %.9P %.8u %.10j %.12M %.5D %.4C %R"'
fi

# TODO uge specific commands
