#!/usr/bin/env python3

import re
import sys
from subprocess import PIPE, Popen

import numpy


def shell(cmd, shell=False):

    if shell:
        p = Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE)
    else:
        cmd = cmd.split()
        p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE)

    output, err = p.communicate()
    return output.decode("utf-8")


if __name__ == "__main__":

    # Note
    # xinput
    # xinput --list-props 14
    # xinput --set-prop 14 "libinput Accel

    # cmd = 'xinput --set-prop {} "libinput Accel Speed" -0.7'
    cmd = 'xinput --set-prop {} "libinput Accel Speed" -1.0'

    xrandr = shell("xrandr | grep connected | grep -v dis", shell=True)
    xrandr = [monitor.strip() for monitor in xrandr.split("\n")[:-1]]
    for monitor in xrandr:
        monitor = monitor.split()
        if "x" not in monitor[2]:
            continue

        res = monitor[2]
        res = res.split("x")
        if res[0] == "2560":
            cmd = 'xinput --set-prop {} "libinput Accel Speed" -0.9'

        # if res[0] == '1920':
        # cmd = 'xinput --set-prop {} "libinput Accel Speed" -1.0'

    # Define external mouses i want to change
    externals = [
        "ASUS ROG SPATHA",
        "Logitech M705",
        "Logitech MX",
        "Logitech USB",
        "Logitech G",
        "PS/2 Generic Mouse",
        "SteelSeries Rival Gaming Mouse",
    ]

    # Find out if they are connected
    for external in externals:
        xinputs = shell('xinput | grep "' + external + '" | grep pointer', shell=True)
        xinputs = xinputs.split("\n")
        xinputs = [xinput.strip() for xinput in xinputs]

        # for every id entry, change prop
        for xinput in xinputs:

            if xinput == "":
                continue

            # a bit hacky, but whatever
            xinput = xinput.split("id=")
            xinput = xinput[-1].split("[")
            xinput = int(xinput[0])

            truecmd = cmd.format(xinput)
            print(truecmd)
            shell(truecmd, shell=True)
